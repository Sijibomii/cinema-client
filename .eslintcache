[{"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\App.js":"3","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\HomeScreen.js":"4","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\LoginScreen.js":"5","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\ScreeningScreen.js":"6","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\DashboardScreen.js":"7","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\SignupScreen.js":"8","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\CartScreen.js":"9","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\components\\Header.js":"10","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\MovieScreen.js":"11","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\components\\Footer.js":"12","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\AllScreenings.js":"13","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\components\\Slider.js":"14","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\services\\AuthService.js":"15","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\services\\MovieService.js":"16","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\services\\ScreeningService.js":"17"},{"size":502,"mtime":1614155629990,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2763,"mtime":1614956950592,"results":"21","hashOfConfig":"19"},{"size":3135,"mtime":1613952527683,"results":"22","hashOfConfig":"19"},{"size":2980,"mtime":1613925186190,"results":"23","hashOfConfig":"19"},{"size":4640,"mtime":1614155690646,"results":"24","hashOfConfig":"19"},{"size":2311,"mtime":1614242545616,"results":"25","hashOfConfig":"19"},{"size":3276,"mtime":1614956887872,"results":"26","hashOfConfig":"19"},{"size":2935,"mtime":1614948662822,"results":"27","hashOfConfig":"19"},{"size":1093,"mtime":1614957094040,"results":"28","hashOfConfig":"19"},{"size":2973,"mtime":1613925664061,"results":"29","hashOfConfig":"19"},{"size":865,"mtime":1611210476237,"results":"30","hashOfConfig":"19"},{"size":1321,"mtime":1613952870590,"results":"31","hashOfConfig":"19"},{"size":2754,"mtime":1611524584792,"results":"32","hashOfConfig":"19"},{"size":451,"mtime":1613640872759,"results":"33","hashOfConfig":"19"},{"size":514,"mtime":1614956837544,"results":"34","hashOfConfig":"19"},{"size":3510,"mtime":1614956869833,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"i645ze",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\index.js",[],["78","79"],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\App.js",[],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\HomeScreen.js",["80"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovies } from '../services/MovieService'\r\nimport { getScreenings } from '../services/ScreeningService'\r\nconst HomeScreen = () => {\r\n  const [movies, setMovies]=useState([])\r\n  const [screenings, setScreenings]=useState([])\r\n  useEffect(()  => {\r\n    const loadMovies = async () => {\r\n      const { response, isError } = await getMovies();\r\n      if (isError) {\r\n        setMovies([]);\r\n      } else {\r\n        console.log(response.data)\r\n        setMovies(response.data);\r\n      }\r\n    }\r\n    loadMovies();\r\n  }, [])\r\n  useEffect(()  => {\r\n    const loadScreenings = async () => {\r\n      const { response, isError } = await getScreenings();\r\n      if (isError) {\r\n        setScreenings([]);\r\n      } else {\r\n        console.log(response.data)\r\n        setScreenings(response.data);\r\n      }\r\n    }\r\n    loadScreenings();\r\n  }, [])\r\n  return (\r\n    <>\r\n    <div className=\"hero\">\r\n      {/* <Header/> */}\r\n      <div className=\"hero__container\">\r\n        <div className=\"hero__container__heading\">\r\n          <h2>Welcome to Our Cinemas!</h2>\r\n          <h3>Book a ticket to watch tending<br/> movies and your favourite shows</h3>\r\n        </div>\r\n        <div className=\"hero__container__form\">\r\n          {/* <input type=\"text\" placeholder=\"search for a movie here!\"/> */}\r\n          <Link to='/allscreenings'>BOOK A TICKET NOW</Link>\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n    <section class=\"breweries\" id=\"breweries\">\r\n      <h1>Top Trending Movies</h1>\r\n    <ul>\r\n      {movies.map((movie)=>(\r\n         <li key={movie.id}>\r\n          <figure>\r\n          <img src={movie.image} className=\"cardd-img\"/>\r\n            <figcaption><h3>{movie.title}</h3></figcaption>\r\n          </figure>\r\n          <p>\r\n            Made in the interiors of collapsing stars star stuff harvesting star light venture billions upon billions Drake Equation brain is the seed of intelligence?\r\n          </p>\r\n          <h4>{movie.duration} | {movie.rated}</h4>\r\n          <h4>Released Aug 20</h4>\r\n          <Link to={`/movie/${movie.id}`}>Book Ticket</Link>\r\n       </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n    \r\n    {/* <Sliderr movies={movies}/> */}\r\n    <div className=\"screenings__table\">\r\n      <div>\r\n        <h2>Our Trending Screenings</h2>\r\n        <Link to='/allscreenings'>SEE ALL SCREENINGS</Link>\r\n      </div>\r\n      \r\n    <table id=\"screenings\">\r\n      <tr>\r\n        <th>Movie</th>\r\n        <th className=\"d-sm-none\">Venue</th>\r\n        <th>Date</th>\r\n        <th className=\"d-sm-none\">Time</th>\r\n        <th ></th>\r\n      </tr>\r\n      { screenings.map((screening)=>(\r\n          <tr key={screening.id}>\r\n            <td>{screening.movie.title}</td>\r\n            <td className=\"d-sm-none\">{screening.venue.name}</td>\r\n            <td>{screening.date}</td>\r\n            <td className=\"d-sm-none\">{screening.time}</td>\r\n            <td ><a href={`/screening/${screening.id}`}>BOOK A SEAT</a></td>\r\n        </tr>\r\n      ))}\r\n    </table>\r\n    </div>\r\n    {/* <Footer/> */} \r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\LoginScreen.js",["81","82","83"],"import React, { useState, useEffect } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Formik } from 'formik'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { login } from '../actions/userActions'\r\nconst LoginScreen = ({ logIn }) => {\r\n  const [error, setError]= useState('')\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      const { response, isError } = await logIn(\r\n        values.username,\r\n        values.password\r\n      );\r\n      if (isError) {\r\n        if (JSON.stringify(response).includes('Error')){\r\n          setError('Invalid Login Details')\r\n        }\r\n        const data = response.response.data;\r\n        if(data.username && data.password){\r\n          let str='username and password fields are required'\r\n          setError(str)\r\n        }\r\n        else if(data.username){\r\n          let str='username:'\r\n          setError(str.concat(data['username'][0]))\r\n        }else if(data.password){\r\n          let str='password:'\r\n          setError(str.concat(data['password'][0]))\r\n    \r\n        }\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n  } \r\n  return (\r\n    <div className=\"login\">\r\n     \r\n       <ToastContainer />\r\n      <div className=\"login__container\">\r\n        <h1 className=\"form__title\">Sign in</h1>\r\n        { error && (\r\n          <h3 className=\"errors\">{error}</h3>\r\n        )}\r\n        \r\n        <Formik\r\n            initialValues={{\r\n              username: '',\r\n              password: ''\r\n            }}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({\r\n               errors, \r\n               handleChange,\r\n               handleSubmit,\r\n               isSubmitting, \r\n              values\r\n            }) => (\r\n            <>\r\n              {\r\n                '__all__' in errors &&\r\n                console.log('dkk')\r\n                // <Alert variant='danger'>\r\n                //   { errors['__all__'] }\r\n                // </Alert>\r\n              }\r\n          <form noValidate onSubmit={handleSubmit}>\r\n            <input \r\n            name='username'\r\n            placeholder=\"Username\"\r\n            onChange={handleChange}\r\n            value={values.username}\r\n            />\r\n            <input\r\n                name='password'\r\n                placeholder=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                onChange={handleChange}\r\n                type='password'\r\n                value={values.password}\r\n              />\r\n            <Link className=\"submit\"type=\"submit\" onClick={()=>{\r\n              return onSubmit(values)\r\n            }}>Submit</Link>\r\n        </form>\r\n        </>\r\n        )} \r\n      </Formik>\r\n        <h3 className=\"text\">New to our website? <Link to=\"/sign-up\" className='red'>Sign up now.</Link></h3>\r\n    </div>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default LoginScreen\r\n","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\ScreeningScreen.js",["84","85","86","87","88","89","90","91"],"import React,{ useEffect,useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getSeatsByScreening, messages,connectToScreening , assignSeat} from '../services/ScreeningService'\r\nimport { Link } from 'react-router-dom'\r\nimport { getUser } from '../services/AuthService'\r\nimport { withRouter }from 'react-router-dom'\r\nconst ScreeningScreen = ({ match,history,isLoggedIn }) => {\r\n  const[seats, setSeats]=useState([])\r\n  const[rawSeats,setRawSeats]= useState([])\r\n  useEffect(()  => {\r\n     \r\n    const loadSeats = async () => {\r\n      if(!isLoggedIn){\r\n        console.log('dfghjk');\r\n        history.push('/sign-in')\r\n        // <Redirect to='/sign-in' />\r\n      }\r\n      console.log(isLoggedIn)\r\n      const { response, isError } = await getSeatsByScreening(match.params.id);\r\n      if (isError) {\r\n        setSeats([]);\r\n      } else {\r\n        setRawSeats(response.data)\r\n        submitHandler(response.data);\r\n      }\r\n    }\r\n    loadSeats();\r\n  }, [isLoggedIn, history])\r\n  useEffect(() => {\r\n    connectToScreening(match.params.id);\r\n    const subscription = messages.subscribe((message) => {\r\n      console.log('connected')\r\n      loadSeats()\r\n      if (rawSeats.length!=0 && message.data.id){\r\n        console.log('change')\r\n        console.log(message.data.id)\r\n        changeSeat(message.data.id,message.data.status);\r\n      }\r\n      if (message.data.status =='EMPTY'){\r\n        toast.info(`seat ${message.data.id} is now free!!!`)\r\n      }\r\n     \r\n    });\r\n    return () => {\r\n      if (subscription) {\r\n        subscription.unsubscribe();\r\n      }\r\n    }\r\n  }, []);\r\n  const loadSeats = async () => {\r\n    const { response, isError } = await getSeatsByScreening(match.params.id);\r\n    if (isError) {\r\n      setSeats([]);\r\n    } else {\r\n      setRawSeats(response.data)\r\n      submitHandler(response.data);\r\n    }\r\n  }\r\n  const changeSeat = (id, status)=>{\r\n    const seat=rawSeats.map((seat)=>{\r\n      if (seat.id == id){\r\n        seat.status=status\r\n      }\r\n    })\r\n    submitHandler(rawSeats)\r\n  }\r\n  const submitHandler = (arr) => {\r\n    let bigArr=[]\r\n    let newArr=[]\r\n    for (let i=0; i<=(arr.length/10); i++){\r\n      let end= ((i*10)+10)\r\n      newArr= arr.slice((i*10), end)\r\n      bigArr.push(newArr)\r\n      newArr=[]\r\n    }\r\n    setSeats(bigArr)\r\n  }\r\n  const asignSeatsStatus = (id) => {\r\n    const user = getUser();\r\n    const data={\r\n      screening: match.params.id,\r\n      user: user.id,\r\n      seat: id,\r\n      status: 'ASSIGNED'\r\n    }\r\n    console.log(data)\r\n    assignSeat(match.params.id, data);\r\n   \r\n  };\r\n  \r\n  return (\r\n    <>\r\n    <div className=\"screening\">\r\n      <ToastContainer/>\r\n      <div className=\"movie-container\">\r\n        <h3></h3>\r\n      </div>\r\n      <p>Users have 10 minutes to complete check out process else, all Temporarily assigned seats will be declared empty</p>\r\n\r\n    <ul className=\"showcase\">\r\n      <li>\r\n        <div className=\"seat\"></div>\r\n        <small>N/A</small>\r\n      </li>\r\n      <li>\r\n        <div className=\"seat selected\"></div>\r\n        <small>Selected</small>\r\n      </li>\r\n      <li>\r\n        <div className=\"seat occupied\"></div>\r\n        <small>Occupied</small>\r\n      </li>\r\n      <li>\r\n        <div className=\"seat temporary\"></div>\r\n        <small>Temporarily assined to a user</small>\r\n      </li>\r\n    </ul>\r\n\r\n    <div className=\"container\">\r\n      <div className=\"screen\"></div>\r\n        {seats.map((seat)=>(\r\n          <>\r\n          <div className=\"row\">\r\n          {seat.map((s)=>(\r\n            <>\r\n            \r\n            <div className={s.status===\"EMPTY\"? 'seat': s.status===\"ASSIGNED\" ? 'seat temporary' : 'seat occupied'} key={seat.id} onClick={()=>{\r\n              if(s.status==='EMPTY'){\r\n                //\r\n                asignSeatsStatus(s.id)\r\n                toast.info('seat is has been added to your cart, please ensure you complete checkout within 10min')\r\n              }\r\n              else{\r\n                if(s.status==='ASSIGNED'){\r\n                  toast.info('seat is currently assigned to someone, please check back')\r\n                }\r\n                else{\r\n                  toast.info('seat is has been booked by a user')\r\n                }\r\n              }\r\n            }}></div>\r\n            </>\r\n          ))}\r\n          </div>\r\n          </>\r\n        ))}\r\n    </div>\r\n\r\n    {/* <p className=\"text\">\r\n      You have selected <span id=\"count\">0</span> seats\r\n    </p> */}\r\n      <Link className=\"checkout__button\" to='/cart'>CHECKOUT NOW</Link>\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(ScreeningScreen)\r\n","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\DashboardScreen.js",["92","93","94"],"import React,{ useEffect,useState } from 'react'\r\nimport { getDownloadTicket, getSeatsBooked } from '../services/ScreeningService'\r\nimport { Link } from 'react-router-dom';\r\nimport { getUser } from '../services/AuthService'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst DashboardScreen = ({ isLoggedIn, history  }) => {\r\n  const[seats, setSeats]=useState([])\r\n  const [user,setUser]=useState('')\r\n  useEffect(() => {\r\n   setUser(getUser())\r\n  }, [])\r\n  useEffect(()  => {\r\n    const loadSeats = async () => {\r\n      if(!isLoggedIn){\r\n        history.push('/sign-in')\r\n      }\r\n      const { response, isError } = await getSeatsBooked();\r\n      if (isError) {\r\n        setSeats([]);\r\n      } else {\r\n        console.log(response.data)\r\n        setSeats(response.data);\r\n      }\r\n    }\r\n    loadSeats();\r\n  }, [isLoggedIn, history])\r\n  const DownloadTicket= async ( id )=>{\r\n    toast.info('This will be implemented later !!!')\r\n    //await getDownloadTicket(id)\r\n  }\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <ToastContainer/>\r\n      <div className=\"dashboard__container\">\r\n        { isLoggedIn && user ? (\r\n          <h1>Hello {user.username}!</h1>\r\n        ):\r\n        <>\r\n        </>\r\n        }\r\n        \r\n        <div className=\"dashboard__container__table\">\r\n        <table id=\"screenings\">\r\n          <tr>\r\n            <th>Ticket ID</th>\r\n            <th>Status</th>\r\n            <th>Movie</th>\r\n            <th>screening date/ time</th>\r\n            <th></th>\r\n          </tr>\r\n          { seats.length !=0 ? (\r\n            <>\r\n            {seats.map((ticket)=>(\r\n              <tr>\r\n              <td>{ticket.id}</td>\r\n              <td>{ticket.seat.status}</td>\r\n              <td>{ticket.screening.movie.title}</td>\r\n              <td>{ticket.screening.date}/{ticket.screening.time}</td>\r\n              <td>\r\n                <span>\r\n                  <Link to={ticket.qr_code}>Download Ticket</Link>\r\n                  <i class=\"fas fa-trash fa-2x\"></i>\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            ))}\r\n            </>\r\n          ): (\r\n            <>\r\n            <h3>You have no tickets yet!</h3>\r\n            </>\r\n          )}\r\n          \r\n    </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardScreen\r\n","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\SignupScreen.js",["95","96"],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\CartScreen.js",["97"],"import React,{ useState, useEffect } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { removeSeat,connectToScreening,getSeatsAssigned,messages, getSeatsPay} from '../services/ScreeningService'\r\nimport { getUser } from '../services/AuthService'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CartScreen = ({ isLoggedIn, history }) => {\r\n  const[seats, setSeats]=useState([])\r\n \r\n  useEffect(()  => {\r\n    const loadSeats = async () => {\r\n      if(!isLoggedIn){\r\n        history.push('/sign-in')\r\n        // \r\n      }\r\n      const { response, isError } = await getSeatsAssigned();\r\n      if (isError) {\r\n        setSeats([]);\r\n      } else {\r\n\r\n        setSeats(response.data);\r\n      }\r\n    }\r\n    loadSeats();\r\n  }, [history, isLoggedIn])\r\n  const payHandler = async ()=>{\r\n    const { isError } = await getSeatsPay();\r\n    if(isError){\r\n      toast.info('Error occured')\r\n    }else{\r\n      window.location.replace(\"/dashboard\");\r\n    }\r\n  }\r\n  const loadSeats = async () => {\r\n    const { response, isError } = await getSeatsAssigned();\r\n    if (isError) {\r\n      setSeats([]);\r\n    } else {\r\n      setSeats(response.data)\r\n    }\r\n  }\r\n  const util=(screen, seat)=>{\r\n   \r\n    connectToScreening(screen);\r\n    const subscription = messages.subscribe((message) => {\r\n      const { id }=getUser()\r\n      let data={\r\n          screening: screen,\r\n          user: id,\r\n          seat: seat,\r\n          status: 'EMPTY'\r\n      }\r\n      removeSeat(screen,data)\r\n      loadSeats()\r\n    });\r\n    return () => {\r\n      if (subscription) {\r\n        subscription.unsubscribe();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <div>\r\n      </div>\r\n      <div className=\"cart\">\r\n      <ToastContainer />\r\n        <div className=\"cart__container\">\r\n          <h1>CART ITEMS</h1>\r\n              {seats.length ==0 ?(\r\n            <>\r\n            <h3>Your Cart Is Empty</h3>\r\n            </>\r\n          ):\r\n              <>\r\n          {seats.map((seat)=>(\r\n            <>\r\n          <div className=\"cart__container__item\" key={seat.id}>\r\n            <div className=\"cart__container__item__top\">\r\n              <h2>Movie: {seat.screening.movie.title} </h2>\r\n              <h3>Seat No: {seat.id}</h3>\r\n              <h4>Venue: {seat.screening.venue.name}</h4>\r\n              <h4>Price : $ {seat.screening.price}</h4>\r\n            </div>\r\n            <div className=\"cart__container__item__bottom\">\r\n              <i class=\"fas fa-trash fa-6x\" onClick={()=>{\r\n                util(seat.screening.id, seat.id)\r\n                toast.info('Seat Removed!')\r\n              }}></i>\r\n            </div>\r\n          </div>\r\n            </>\r\n          ))}\r\n          </>\r\n          }\r\n        <Link className=\"checkout__button\" onClick={()=>{\r\n          return payHandler()\r\n        }}>CHECKOUT NOW</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\components\\Header.js",[],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\MovieScreen.js",["98","99","100","101"],"import React,{ useState,useEffect} from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovie } from '../services/MovieService';\r\nimport { getScreeningByMovie} from '../services/ScreeningService'\r\nconst MovieScreen = ({ match }) => {\r\n  const[screening, setScreening] =useState([])\r\n  const [movie, setMovie]=useState({})\r\n  useEffect(()  => {\r\n    const loadMovie = async () => {\r\n      const { response, isError } = await getMovie(match.params.id);\r\n      if (isError) {\r\n        setMovie([]);\r\n      } else {\r\n        // console.log(response.data)\r\n        setMovie(response.data);\r\n      }\r\n    }\r\n    loadMovie();\r\n  }, [])\r\n  useEffect(()  => {\r\n    const loadScreening = async () => {\r\n      const { response, isError } = await getScreeningByMovie(match.params.id);\r\n      if (isError) {\r\n        setScreening([]);\r\n      } else {\r\n        // console.log(response.data)\r\n        setScreening(response.data);\r\n      }\r\n    }\r\n    loadScreening();\r\n  }, [])\r\n  const style={\r\n    background: `linear-gradient(to bottom, rgba(0, 0, 0, 0.35), rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.35)),url(${movie.image}) top left / cover no-repeat`\r\n  }\r\n  return (\r\n    <>\r\n     <ToastContainer />\r\n      <div id=\"myModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <span class=\"close\">&times;</span>\r\n          \r\n        </div>\r\n      </div>\r\n      <div className=\"movie\" style={style}>\r\n          <div className=\"movie__stats\">\r\n            <h1>{movie.title}</h1>\r\n            <div className=\"movie__stats__rating\">\r\n              <i class=\"fas fa-star fa-5x\"></i>\r\n              <i class=\"fas fa-star fa-5x\"></i>\r\n              <i class=\"fas fa-star fa-5x\"></i>\r\n              <i class=\"fas fa-star fa-5x\"></i>\r\n              <i class=\"far fa-star fa-5x\"></i>\r\n            </div>\r\n            <h3>{movie.genre}| Drama</h3>\r\n            <h4>{movie.duration}</h4>\r\n            <h4 className=\"direct\">Directed by: {movie.director}</h4>\r\n            <div className=\"movie__stats__buttons\">\r\n              {/* <a className=\"d-sm-none\" id=\"mybtn\" onClick={openModal}><i class=\"fas fa-play \"></i></a> */}\r\n              <Link>BOOK A TICKET</Link>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"showing__times\">\r\n        <h1>Showing Times</h1>\r\n        \r\n          {screening.length==0 ?(\r\n            <h2>No Screenings available</h2>\r\n          ):<>\r\n          {screening.map((screen)=>(\r\n          <div className=\"showing__times__time\" key={screen.id}>\r\n            <div className=\"showing__times__time__datetime\">\r\n              <h4>{screen.date}</h4>\r\n              <h4>{screen.time}</h4>\r\n            </div>\r\n            <div className=\"showing__times__time__button\">\r\n              <a href={`/screening/${screen.id}`}>BOOK A SEAT</a>\r\n            </div>\r\n          </div>\r\n          ))}\r\n          </>}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieScreen\r\n","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\components\\Footer.js",["102","103","104","105","106","107","108","109","110"],"import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\">\r\n      <div className=\"footer__container\">\r\n        <div className=\"footer__container__one\">\r\n          <ul>\r\n            <li><a>CINEMA</a></li>\r\n            <li><a>Contact Us</a></li>\r\n            <li><a>Privacy</a></li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footer__container__two\">\r\n          <ul>\r\n            <li><a>Job Offers</a></li>\r\n            <li><a>Terms Of Use</a></li>\r\n            <li><a>accounts</a></li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"footer__container__three\">\r\n          <ul>\r\n            <li><a>support@cinema.com</a></li>\r\n            <li><a>Connect with Us!</a></li>\r\n            <li><a>Legal Notices</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\User\\Desktop\\movie-app\\client\\src\\screens\\AllScreenings.js",[],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\components\\Slider.js",["111","112"],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\services\\AuthService.js",[],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\services\\MovieService.js",[],"C:\\Users\\User\\Desktop\\movie-app\\client\\src\\services\\ScreeningService.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":56,"column":11,"nodeType":"119","endLine":56,"endColumn":57},{"ruleId":"120","severity":1,"message":"121","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"124","line":2,"column":26,"nodeType":"122","messageId":"123","endLine":2,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":85,"column":17,"nodeType":"127","endLine":85,"endColumn":32},{"ruleId":"128","severity":1,"message":"129","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":27,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":35,"column":26,"nodeType":"134","messageId":"135","endLine":35,"endColumn":28},{"ruleId":"132","severity":1,"message":"136","line":40,"column":31,"nodeType":"134","messageId":"135","endLine":40,"endColumn":33},{"ruleId":"128","severity":1,"message":"137","line":50,"column":6,"nodeType":"130","endLine":50,"endColumn":8,"suggestions":"138"},{"ruleId":"120","severity":1,"message":"139","line":61,"column":11,"nodeType":"122","messageId":"123","endLine":61,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":61,"column":35,"nodeType":"142","messageId":"143","endLine":61,"endColumn":37},{"ruleId":"132","severity":1,"message":"136","line":62,"column":19,"nodeType":"134","messageId":"135","endLine":62,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":97,"column":9,"nodeType":"119","endLine":97,"endColumn":13},{"ruleId":"120","severity":1,"message":"146","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":27},{"ruleId":"120","severity":1,"message":"147","line":27,"column":9,"nodeType":"122","messageId":"123","endLine":27,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":51,"column":26,"nodeType":"134","messageId":"135","endLine":51,"endColumn":28},{"ruleId":"120","severity":1,"message":"124","line":3,"column":26,"nodeType":"122","messageId":"123","endLine":3,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":88,"column":19,"nodeType":"127","endLine":88,"endColumn":34},{"ruleId":"132","severity":1,"message":"136","line":71,"column":29,"nodeType":"134","messageId":"135","endLine":71,"endColumn":31},{"ruleId":"120","severity":1,"message":"124","line":2,"column":26,"nodeType":"122","messageId":"123","endLine":2,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":20,"column":6,"nodeType":"130","endLine":20,"endColumn":8,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"129","line":32,"column":6,"nodeType":"130","endLine":32,"endColumn":8,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"136","line":67,"column":28,"nodeType":"134","messageId":"135","endLine":67,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":9,"column":17,"nodeType":"119","endLine":9,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":10,"column":17,"nodeType":"119","endLine":10,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":11,"column":17,"nodeType":"119","endLine":11,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":16,"column":17,"nodeType":"119","endLine":16,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":17,"column":17,"nodeType":"119","endLine":17,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":18,"column":17,"nodeType":"119","endLine":18,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":23,"column":17,"nodeType":"119","endLine":23,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":24,"column":17,"nodeType":"119","endLine":24,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":25,"column":17,"nodeType":"119","endLine":25,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":33,"column":15,"nodeType":"119","endLine":33,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":39,"column":15,"nodeType":"119","endLine":39,"endColumn":18},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["154"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'changeSeat', 'loadSeats', 'match.params.id', and 'rawSeats.length'. Either include them or remove the dependency array.",["155"],"'seat' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'getDownloadTicket' is defined but never used.","'DownloadTicket' is assigned a value but never used.",["156"],["157"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"162","fix":"164"},"Update the dependencies array to be: [isLoggedIn, history, match.params.id]",{"range":"165","text":"166"},"Update the dependencies array to be: [changeSeat, loadSeats, match.params.id, rawSeats.length]",{"range":"167","text":"168"},"Update the dependencies array to be: [match.params.id]",{"range":"169","text":"170"},{"range":"171","text":"170"},[1039,1060],"[isLoggedIn, history, match.params.id]",[1659,1661],"[changeSeat, loadSeats, match.params.id, rawSeats.length]",[697,699],"[match.params.id]",[1031,1033]]